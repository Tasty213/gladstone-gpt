name: Build and package

on:
  push:
    branches: master
  workflow_dispatch: 

jobs:
  lint: 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')
  test: 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
    - name: Running pytest
      run: |
        touch ./app/backend/conftest.py
        pytest
        rm ./app/backend/conftest.py
  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      name: Checkout code
    - name: Use Node.js 20.5.x
      uses: actions/setup-node@v3
      with:
        cache-dependency-path: ./app/package-lock.json
        node-version: 20.5.x
        cache: 'npm'
    - run: npm ci
      working-directory: ./app
    - run: npm run build --if-present
      working-directory: ./app
    - uses: gonuit/heroku-docker-deploy@v1.3.3
      name: Build, Push and Release a Docker container to Heroku.
      with:
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
        email: ${{ secrets.HEROKU_EMAIL }}
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        dockerfile_directory: ./app
    - name: Set Release Version from Tag
      run: echo "RELEASE_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
    # This step creates a new Change Tracking Marker
    - name: New Relic Application Deployment Marker
      uses: newrelic/deployment-marker-action@v2.2.0
      with:
        apiKey: ${{ secrets.NEW_RELIC_API_KEY }}
        region: "EU"
        guid: ${{ secrets.NEW_RELIC_DEPLOYMENT_ENTITY_GUID }}
        version: "${{ env.RELEASE_VERSION }}"
        user: "${{ github.actor }}"
